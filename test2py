import os
import cv2

img_path = r"D:\FYP Datasets\BAGLS\53_seg.png"
img = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
# print(img.shape)
# print(any(any(row) for row in img)) #check if any row has any non-zero value

#to consider cases where there are multiple countours and want to combine them
x_min,y_min,x_max,y_max = float('inf'), float('inf'), 0, 0 
#bounding box detector
cntrs, hierachy = cv2.findContours(img, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
print(len(cntrs))
for c in cntrs:
    x,y,w,h = cv2.boundingRect(c)
    x_min = min(x_min, x)
    y_min = min(y_min, y)
    x_max = max(x_max, x+w)
    y_max = max(y_max, y+h)
cv2.rectangle(img, (x_min, y_min), (x_max, y_max), (255, 255, 255), 2)     
cv2.imshow("img", img)
cv2.waitKey(0)
cv2.destroyAllWindows()

# convert to yolo .. yolo does this to normalize the data to 0-1
image_height, image_width = img.shape
x_center = (x_min + x_max) / 2 / image_width
y_center = (y_min + y_max) / 2 / image_height
width = (x_max - x_min) / image_width
height = (y_max - y_min) / image_height

print(x_center, y_center, width, height)

